name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.34.0
        cache: true
    
    - name: Run unit tests
      run: pixi run -e test-py${{ matrix.python-version }} test
    
    - name: Run CLI integration tests
      run: pixi run -e test-py${{ matrix.python-version }} pytest tests/test_cli_integration_working.py -v
      
    - name: Run working CLI specification tests
      run: pixi run -e test-py${{ matrix.python-version }} pytest tests/test_cli_specification.py -v
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.11'
      with:
        fail_ci_if_error: false

  lint:
    name: Linting and Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up pixi  
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.34.0
        cache: true
    
    # Add linting when you have it configured
    # - name: Run ruff
    #   run: pixi run ruff check .
    
    # - name: Run mypy
    #   run: pixi run mypy src/

  build-test:
    name: Test Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Verify build
      run: python -m twine check dist/*
