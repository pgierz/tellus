name: Execute Documentation

on:
  push:
    branches: [ main, develop, rest ]
    paths:
      - 'docs/**/*.ipynb'
      - '**/*DEMO*.ipynb'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**/*.ipynb'
      - '**/*DEMO*.ipynb'

jobs:
  execute-notebooks:
    name: Execute Documentation Notebooks
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        notebook:
          - "docs/tutorials/CLI_DEMO.ipynb"
          - "docs/tutorials/REST_API_DEMO.ipynb"
      fail-fast: false  # Continue with other notebooks even if one fails
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install jupyter
    
    - name: Prepare notebook environment
      run: |
        # Create temp directories that demos expect
        mkdir -p /tmp/dev-storage
        mkdir -p /tmp/api-demo-storage
        
        # Clean up any existing state for reproducible runs
        rm -f simulations.json locations.json
    
    - name: Execute notebook
      run: |
        notebook="${{ matrix.notebook }}"
        echo "üìì Executing notebook: $notebook"
        
        # Clear any existing outputs for clean execution
        jupyter nbconvert --clear-output --inplace "$notebook"
        
        # Execute the notebook and capture outputs
        jupyter nbconvert --to notebook --execute --inplace "$notebook"
        
        echo "‚úÖ Successfully executed: $notebook"
      
    - name: Set artifact name
      run: |
        notebook="${{ matrix.notebook }}"
        basename=$(basename "$notebook" .ipynb)
        echo "ARTIFACT_NAME=$basename" >> $GITHUB_ENV
        
    - name: Upload executed notebook
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: executed-${{ env.ARTIFACT_NAME }}
        path: ${{ matrix.notebook }}
        retention-days: 30
        
    - name: Upload execution logs
      uses: actions/upload-artifact@v4  
      if: failure()
      with:
        name: logs-${{ env.ARTIFACT_NAME }}
        path: |
          simulations.json
          locations.json
        retention-days: 7

  # Special job for REST API demo that requires server
  execute-rest-api-demo:
    name: Execute REST API Demo (with server)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install jupyter
    
    - name: Prepare environment
      run: |
        mkdir -p /tmp/api-demo-storage
        rm -f simulations.json locations.json
    
    - name: Start API server in background
      run: |
        # Start API server in background  
        python -m uvicorn src.tellus.interfaces.web.main:app --host 0.0.0.0 --port 1968 &
        API_PID=$!
        echo "API_PID=$API_PID" >> $GITHUB_ENV
        
        # Wait for server to be ready
        echo "‚è≥ Waiting for API server to start..."
        for i in {1..30}; do
          if curl -s http://localhost:1968/api/v0a3/health > /dev/null 2>&1; then
            echo "‚úÖ API server is ready!"
            break
          fi
          if [ $i -eq 30 ]; then
            echo "‚ùå API server failed to start within 30 seconds"
            exit 1
          fi
          sleep 1
        done
    
    - name: Execute REST API demo notebook
      run: |
        # Clear outputs and execute
        jupyter nbconvert --clear-output --inplace "docs/tutorials/REST_API_DEMO.ipynb"
        jupyter nbconvert --to notebook --execute --inplace "docs/tutorials/REST_API_DEMO.ipynb"
        echo "‚úÖ Successfully executed REST API demo"
    
    - name: Stop API server
      if: always()
      run: |
        if [ ! -z "$API_PID" ]; then
          kill $API_PID || true
          echo "üõë Stopped API server"
        fi
    
    - name: Upload executed REST API notebook
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: executed-rest-api-notebook
        path: docs/tutorials/REST_API_DEMO.ipynb
        retention-days: 30