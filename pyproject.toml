[project]
authors = [{name = "Paul Gierz", email = "pgierz@awi.de"}]
name = "tellus"
requires-python = ">= 3.11"
version = "0.1.0"

[project.optional-dependencies]
# Removed chat dependencies

[project.scripts]
tellus = "tellus.core.cli:main"
tellus-chat = "tellus_chat.cli:main"

[tool.pytest.ini_options]
python_files = "test_*.py"
testpaths = ["tests"]
pythonpath = ["src"]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--durations=10",
    "-m", "not performance"
]   
markers = [
    "unit: Unit tests for individual components", 
    "integration: Integration tests for component interactions",
    "performance: Performance tests for large datasets (skipped by default - use -m performance to run)",
    "property: Property-based tests for data integrity",
    "earth_science: Tests specific to Earth science workflows",
    "archive: Tests for archive system components",
    "cache: Tests for caching functionality",
    "location: Tests for multi-location functionality",
    "security: Security tests for defensive measures and vulnerability prevention",
    "slow: Tests that take more than 30 seconds",
    "network: Tests that require network access",
    "large_data: Tests that work with large datasets (>100MB)",
    "hpc: Tests for HPC environment scenarios",
    "timeout: Tests that should time out after a certain duration",
    "xarray: Tests that require xarray",
    "benchmark: Performance benchmark tests",
    "trio: Tests that use trio async framework"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore:numpy.ndarray size changed, may indicate binary incompatibility:RuntimeWarning"
    # "ignore::fsspec.exceptions.FSTimeoutError"
]

# [tool.pytest.ini_options.timeout]
# timeout = 300
# timeout_method = "thread"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build.targets.wheel]
packages = ["src/tellus"]

[tool.pixi.workspace]
channels = ["conda-forge", "bioconda"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.pypi-dependencies]
tellus = { path = ".", editable = true }
tellus-chat = { path = "./src/tellus_chat", editable = true }
animavox = { path = "./vendor/animavox", editable = true }
# snakemake-storage-plugin-fsspec = { git = "git+https://github.com/pgierz/snakemake-storage-plugin-fsspec.git" }
snakemake-storage-plugin-fsspec = { git = "git+https://github.com/pgierz/snakemake-storage-plugin-fsspec.git" }

[tool.pixi.tasks]
# sandbox = "python3 sandbox/manual_tests.py"
tellus = "python -m tellus.core.cli"
sandbox = { cmd = "python3 my_tellus_script.py", cwd = "sandbox" , description = "Run a dummy script using tellus"}

[tool.pixi.feature.test.pypi-dependencies]
factory-boy = "*"  # Move to Py-PI

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-timeout = "*"
pytest-mock = "*"
pytest-xdist = "*"
pytest-benchmark = "*"
hypothesis = "*"
faker = "*"
responses = "*"
freezegun = "*"
numpy = ">=1.24,<2.0"
netcdf4 = ">=1.7.2,<2"
xarray = "*"
zarr = "*"
dask = "*"
jupyter = ">=1.1.1,<2"
ipykernel = ">=6.30.1,<7"
matplotlib = ">=3.10.5,<4"
cartopy = ">=0.25.0,<0.26"
h5netcdf = ">=1.6.4,<2"
nc-time-axis = ">=1.4.1,<2"
scipy = ">=1.16.0,<2"
seaborn = ">=0.13.2,<0.14"

[tool.pixi.feature.test.tasks]
test = "pytest"
test-performance = { cmd = "pytest -m performance --timeout=600", description = "Run performance tests (may take 30+ minutes)" }
test-all = { cmd = "pytest -m 'performance or not performance'", description = "Run all tests including performance tests" }

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.environments]
test = ["test"]
test-py311 = ["py311", "test"]
test-py312 = ["py312", "test"]
docs = ["docs"]

[tool.pixi.dependencies]
python = "*"

click = ">=8.0.0"
rich = ">=13.0.0"
fsspec = ">=2025.7.0,<2026"
paramiko = ">=3.5.1,<4"
rich-click = ">=1.8.9,<2"
questionary = ">=2.1.0,<3"
requests = ">=2.32.4,<3"
loguru = ">=0.7.3,<0.8"
inquirerpy = ">=0.3.4,<0.4"
snakemake = ">=9.8.0,<10"
fastapi = ">=0.116.1,<0.117"
uvicorn = ">=0.35.0,<0.36"
hypothesis = ">=6.136.9,<7"
nc-time-axis = ">=1.4.1,<2"
nbconvert = ">=7.16.6,<8"
papermill = ">=2.6.0,<3"
textual = ">=5.3.0,<6"

[tool.pixi.feature.docs.dependencies]
jupyter-book = "*"
pydata-sphinx-theme = "*"
sphinx = ">=4.0"
myst-nb = "*"
sphinx-copybutton = "*"
sphinx-design = "*"
jupyter = "*"

[tool.pixi.feature.docs.tasks]
docs-build = "jupyter-book build docs"
docs-clean = "jupyter-book clean docs"
docs-serve = { cmd = "python -m http.server 8000", cwd = "docs/_build/html", description = "Serve documentation locally" }
